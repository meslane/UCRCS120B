
FinalProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000186  00800100  000006d6  0000076a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006d6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000074  00800286  00800286  000008f0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000008f0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000920  2**2
                  CONTENTS, READONLY
  5 .debug_info   00000792  00000000  00000000  00000960  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000729  00000000  00000000  000010f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000016a  00000000  00000000  0000181b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000296  00000000  00000000  00001985  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	01 c3       	rjmp	.+1538   	; 0x638 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	12 e0       	ldi	r17, 0x02	; 2
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e6 ed       	ldi	r30, 0xD6	; 214
  a0:	f6 e0       	ldi	r31, 0x06	; 6
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a6 38       	cpi	r26, 0x86	; 134
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	22 e0       	ldi	r18, 0x02	; 2
  b4:	a6 e8       	ldi	r26, 0x86	; 134
  b6:	b2 e0       	ldi	r27, 0x02	; 2
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	aa 3f       	cpi	r26, 0xFA	; 250
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	e9 d0       	rcall	.+466    	; 0x296 <main>
  c4:	06 c3       	rjmp	.+1548   	; 0x6d2 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <delay_ms>:
  c8:	20 e0       	ldi	r18, 0x00	; 0
  ca:	30 e0       	ldi	r19, 0x00	; 0
  cc:	28 17       	cp	r18, r24
  ce:	39 07       	cpc	r19, r25
  d0:	4c f4       	brge	.+18     	; 0xe4 <delay_ms+0x1c>
  d2:	4e e0       	ldi	r20, 0x0E	; 14
  d4:	56 e0       	ldi	r21, 0x06	; 6
  d6:	00 00       	nop
  d8:	41 50       	subi	r20, 0x01	; 1
  da:	51 09       	sbc	r21, r1
  dc:	e1 f7       	brne	.-8      	; 0xd6 <delay_ms+0xe>
  de:	2f 5f       	subi	r18, 0xFF	; 255
  e0:	3f 4f       	sbci	r19, 0xFF	; 255
  e2:	f4 cf       	rjmp	.-24     	; 0xcc <delay_ms+0x4>
  e4:	08 95       	ret

000000e6 <LCD_WriteCommand>:
  e6:	5e 98       	cbi	0x0b, 6	; 11
  e8:	88 b9       	out	0x08, r24	; 8
  ea:	5f 9a       	sbi	0x0b, 7	; 11
  ec:	00 00       	nop
  ee:	5f 98       	cbi	0x0b, 7	; 11
  f0:	82 e0       	ldi	r24, 0x02	; 2
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	e9 cf       	rjmp	.-46     	; 0xc8 <delay_ms>

000000f6 <LCD_ClearScreen>:
  f6:	81 e0       	ldi	r24, 0x01	; 1
  f8:	f6 cf       	rjmp	.-20     	; 0xe6 <LCD_WriteCommand>

000000fa <LCD_Cursor>:
  fa:	81 31       	cpi	r24, 0x11	; 17
  fc:	10 f4       	brcc	.+4      	; 0x102 <LCD_Cursor+0x8>
  fe:	81 58       	subi	r24, 0x81	; 129
 100:	01 c0       	rjmp	.+2      	; 0x104 <LCD_Cursor+0xa>
 102:	81 55       	subi	r24, 0x51	; 81
 104:	f0 cf       	rjmp	.-32     	; 0xe6 <LCD_WriteCommand>

00000106 <LCD_init>:
 106:	84 e6       	ldi	r24, 0x64	; 100
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	de df       	rcall	.-68     	; 0xc8 <delay_ms>
 10c:	88 e3       	ldi	r24, 0x38	; 56
 10e:	eb df       	rcall	.-42     	; 0xe6 <LCD_WriteCommand>
 110:	86 e0       	ldi	r24, 0x06	; 6
 112:	e9 df       	rcall	.-46     	; 0xe6 <LCD_WriteCommand>
 114:	8f e0       	ldi	r24, 0x0F	; 15
 116:	e7 df       	rcall	.-50     	; 0xe6 <LCD_WriteCommand>
 118:	81 e0       	ldi	r24, 0x01	; 1
 11a:	e5 df       	rcall	.-54     	; 0xe6 <LCD_WriteCommand>
 11c:	8a e0       	ldi	r24, 0x0A	; 10
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	d3 cf       	rjmp	.-90     	; 0xc8 <delay_ms>

00000122 <LCD_WriteData>:
 122:	5e 9a       	sbi	0x0b, 6	; 11
 124:	88 b9       	out	0x08, r24	; 8
 126:	5f 9a       	sbi	0x0b, 7	; 11
 128:	00 00       	nop
 12a:	5f 98       	cbi	0x0b, 7	; 11
 12c:	81 e0       	ldi	r24, 0x01	; 1
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	cb cf       	rjmp	.-106    	; 0xc8 <delay_ms>

00000132 <Tick_MoveObjects>:
 132:	cf 93       	push	r28
 134:	df 93       	push	r29
 136:	01 97       	sbiw	r24, 0x01	; 1
 138:	d1 f5       	brne	.+116    	; 0x1ae <Tick_MoveObjects+0x7c>
 13a:	c8 ea       	ldi	r28, 0xA8	; 168
 13c:	d2 e0       	ldi	r29, 0x02	; 2
 13e:	8e 81       	ldd	r24, Y+6	; 0x06
 140:	81 11       	cpse	r24, r1
 142:	0e c0       	rjmp	.+28     	; 0x160 <Tick_MoveObjects+0x2e>
 144:	80 91 f0 02 	lds	r24, 0x02F0	; 0x8002f0 <controllerInput>
 148:	83 ff       	sbrs	r24, 3
 14a:	03 c0       	rjmp	.+6      	; 0x152 <Tick_MoveObjects+0x20>
 14c:	61 e0       	ldi	r22, 0x01	; 1
 14e:	70 e0       	ldi	r23, 0x00	; 0
 150:	04 c0       	rjmp	.+8      	; 0x15a <Tick_MoveObjects+0x28>
 152:	82 ff       	sbrs	r24, 2
 154:	27 c0       	rjmp	.+78     	; 0x1a4 <Tick_MoveObjects+0x72>
 156:	6f ef       	ldi	r22, 0xFF	; 255
 158:	7f ef       	ldi	r23, 0xFF	; 255
 15a:	ce 01       	movw	r24, r28
 15c:	c1 d1       	rcall	.+898    	; 0x4e0 <moveY>
 15e:	22 c0       	rjmp	.+68     	; 0x1a4 <Tick_MoveObjects+0x72>
 160:	9d 81       	ldd	r25, Y+5	; 0x05
 162:	91 11       	cpse	r25, r1
 164:	1f c0       	rjmp	.+62     	; 0x1a4 <Tick_MoveObjects+0x72>
 166:	9c 81       	ldd	r25, Y+4	; 0x04
 168:	91 30       	cpi	r25, 0x01	; 1
 16a:	e1 f4       	brne	.+56     	; 0x1a4 <Tick_MoveObjects+0x72>
 16c:	83 30       	cpi	r24, 0x03	; 3
 16e:	b1 f0       	breq	.+44     	; 0x19c <Tick_MoveObjects+0x6a>
 170:	38 f4       	brcc	.+14     	; 0x180 <Tick_MoveObjects+0x4e>
 172:	81 30       	cpi	r24, 0x01	; 1
 174:	79 f0       	breq	.+30     	; 0x194 <Tick_MoveObjects+0x62>
 176:	82 30       	cpi	r24, 0x02	; 2
 178:	a9 f4       	brne	.+42     	; 0x1a4 <Tick_MoveObjects+0x72>
 17a:	61 e0       	ldi	r22, 0x01	; 1
 17c:	70 e0       	ldi	r23, 0x00	; 0
 17e:	10 c0       	rjmp	.+32     	; 0x1a0 <Tick_MoveObjects+0x6e>
 180:	85 30       	cpi	r24, 0x05	; 5
 182:	41 f0       	breq	.+16     	; 0x194 <Tick_MoveObjects+0x62>
 184:	78 f0       	brcs	.+30     	; 0x1a4 <Tick_MoveObjects+0x72>
 186:	88 30       	cpi	r24, 0x08	; 8
 188:	68 f4       	brcc	.+26     	; 0x1a4 <Tick_MoveObjects+0x72>
 18a:	80 91 a7 02 	lds	r24, 0x02A7	; 0x8002a7 <loop.1725>
 18e:	83 70       	andi	r24, 0x03	; 3
 190:	49 f4       	brne	.+18     	; 0x1a4 <Tick_MoveObjects+0x72>
 192:	04 c0       	rjmp	.+8      	; 0x19c <Tick_MoveObjects+0x6a>
 194:	80 91 a7 02 	lds	r24, 0x02A7	; 0x8002a7 <loop.1725>
 198:	80 fd       	sbrc	r24, 0
 19a:	04 c0       	rjmp	.+8      	; 0x1a4 <Tick_MoveObjects+0x72>
 19c:	6f ef       	ldi	r22, 0xFF	; 255
 19e:	7f ef       	ldi	r23, 0xFF	; 255
 1a0:	ce 01       	movw	r24, r28
 1a2:	d9 d1       	rcall	.+946    	; 0x556 <moveX>
 1a4:	29 96       	adiw	r28, 0x09	; 9
 1a6:	82 e0       	ldi	r24, 0x02	; 2
 1a8:	c0 3f       	cpi	r28, 0xF0	; 240
 1aa:	d8 07       	cpc	r29, r24
 1ac:	41 f6       	brne	.-112    	; 0x13e <Tick_MoveObjects+0xc>
 1ae:	80 91 a7 02 	lds	r24, 0x02A7	; 0x8002a7 <loop.1725>
 1b2:	87 30       	cpi	r24, 0x07	; 7
 1b4:	10 f4       	brcc	.+4      	; 0x1ba <Tick_MoveObjects+0x88>
 1b6:	8f 5f       	subi	r24, 0xFF	; 255
 1b8:	01 c0       	rjmp	.+2      	; 0x1bc <Tick_MoveObjects+0x8a>
 1ba:	80 e0       	ldi	r24, 0x00	; 0
 1bc:	80 93 a7 02 	sts	0x02A7, r24	; 0x8002a7 <loop.1725>
 1c0:	81 e0       	ldi	r24, 0x01	; 1
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	df 91       	pop	r29
 1c6:	cf 91       	pop	r28
 1c8:	08 95       	ret

000001ca <Tick_DrawObjects>:
 1ca:	df 92       	push	r13
 1cc:	ef 92       	push	r14
 1ce:	ff 92       	push	r15
 1d0:	0f 93       	push	r16
 1d2:	1f 93       	push	r17
 1d4:	cf 93       	push	r28
 1d6:	df 93       	push	r29
 1d8:	89 2b       	or	r24, r25
 1da:	31 f5       	brne	.+76     	; 0x228 <Tick_DrawObjects+0x5e>
 1dc:	88 ea       	ldi	r24, 0xA8	; 168
 1de:	e8 2e       	mov	r14, r24
 1e0:	82 e0       	ldi	r24, 0x02	; 2
 1e2:	f8 2e       	mov	r15, r24
 1e4:	c0 e0       	ldi	r28, 0x00	; 0
 1e6:	d0 e0       	ldi	r29, 0x00	; 0
 1e8:	99 e0       	ldi	r25, 0x09	; 9
 1ea:	d9 2e       	mov	r13, r25
 1ec:	f7 01       	movw	r30, r14
 1ee:	84 81       	ldd	r24, Z+4	; 0x04
 1f0:	81 30       	cpi	r24, 0x01	; 1
 1f2:	89 f4       	brne	.+34     	; 0x216 <Tick_DrawObjects+0x4c>
 1f4:	dc 9e       	mul	r13, r28
 1f6:	f0 01       	movw	r30, r0
 1f8:	dd 9e       	mul	r13, r29
 1fa:	f0 0d       	add	r31, r0
 1fc:	11 24       	eor	r1, r1
 1fe:	e8 55       	subi	r30, 0x58	; 88
 200:	fd 4f       	sbci	r31, 0xFD	; 253
 202:	00 81       	ld	r16, Z
 204:	11 81       	ldd	r17, Z+1	; 0x01
 206:	22 81       	ldd	r18, Z+2	; 0x02
 208:	33 81       	ldd	r19, Z+3	; 0x03
 20a:	44 81       	ldd	r20, Z+4	; 0x04
 20c:	55 81       	ldd	r21, Z+5	; 0x05
 20e:	66 81       	ldd	r22, Z+6	; 0x06
 210:	77 81       	ldd	r23, Z+7	; 0x07
 212:	80 85       	ldd	r24, Z+8	; 0x08
 214:	ce d1       	rcall	.+924    	; 0x5b2 <draw>
 216:	21 96       	adiw	r28, 0x01	; 1
 218:	f9 e0       	ldi	r31, 0x09	; 9
 21a:	ef 0e       	add	r14, r31
 21c:	f1 1c       	adc	r15, r1
 21e:	c8 30       	cpi	r28, 0x08	; 8
 220:	d1 05       	cpc	r29, r1
 222:	21 f7       	brne	.-56     	; 0x1ec <Tick_DrawObjects+0x22>
 224:	80 e0       	ldi	r24, 0x00	; 0
 226:	69 df       	rcall	.-302    	; 0xfa <LCD_Cursor>
 228:	80 e0       	ldi	r24, 0x00	; 0
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	df 91       	pop	r29
 22e:	cf 91       	pop	r28
 230:	1f 91       	pop	r17
 232:	0f 91       	pop	r16
 234:	ff 90       	pop	r15
 236:	ef 90       	pop	r14
 238:	df 90       	pop	r13
 23a:	08 95       	ret

0000023c <ADC_init>:
 23c:	ea e7       	ldi	r30, 0x7A	; 122
 23e:	f0 e0       	ldi	r31, 0x00	; 0
 240:	80 81       	ld	r24, Z
 242:	80 6e       	ori	r24, 0xE0	; 224
 244:	80 83       	st	Z, r24
 246:	08 95       	ret

00000248 <getController>:
 248:	cf 93       	push	r28
 24a:	df 93       	push	r29
 24c:	29 98       	cbi	0x05, 1	; 5
 24e:	81 e0       	ldi	r24, 0x01	; 1
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	3a df       	rcall	.-396    	; 0xc8 <delay_ms>
 254:	29 9a       	sbi	0x05, 1	; 5
 256:	81 e0       	ldi	r24, 0x01	; 1
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	36 df       	rcall	.-404    	; 0xc8 <delay_ms>
 25c:	29 98       	cbi	0x05, 1	; 5
 25e:	d8 e0       	ldi	r29, 0x08	; 8
 260:	c0 e0       	ldi	r28, 0x00	; 0
 262:	cc 0f       	add	r28, r28
 264:	18 9b       	sbis	0x03, 0	; 3
 266:	c1 60       	ori	r28, 0x01	; 1
 268:	2a 98       	cbi	0x05, 2	; 5
 26a:	81 e0       	ldi	r24, 0x01	; 1
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	2c df       	rcall	.-424    	; 0xc8 <delay_ms>
 270:	2a 9a       	sbi	0x05, 2	; 5
 272:	81 e0       	ldi	r24, 0x01	; 1
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	28 df       	rcall	.-432    	; 0xc8 <delay_ms>
 278:	2a 98       	cbi	0x05, 2	; 5
 27a:	d1 50       	subi	r29, 0x01	; 1
 27c:	91 f7       	brne	.-28     	; 0x262 <getController+0x1a>
 27e:	8c 2f       	mov	r24, r28
 280:	df 91       	pop	r29
 282:	cf 91       	pop	r28
 284:	08 95       	ret

00000286 <Tick_PollController>:
 286:	89 2b       	or	r24, r25
 288:	19 f4       	brne	.+6      	; 0x290 <Tick_PollController+0xa>
 28a:	de df       	rcall	.-68     	; 0x248 <getController>
 28c:	80 93 f0 02 	sts	0x02F0, r24	; 0x8002f0 <controllerInput>
 290:	80 e0       	ldi	r24, 0x00	; 0
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	08 95       	ret

00000296 <main>:
 296:	cf 93       	push	r28
 298:	df 93       	push	r29
 29a:	00 d0       	rcall	.+0      	; 0x29c <main+0x6>
 29c:	00 d0       	rcall	.+0      	; 0x29e <main+0x8>
 29e:	00 d0       	rcall	.+0      	; 0x2a0 <main+0xa>
 2a0:	cd b7       	in	r28, 0x3d	; 61
 2a2:	de b7       	in	r29, 0x3e	; 62
 2a4:	11 b8       	out	0x01, r1	; 1
 2a6:	86 e4       	ldi	r24, 0x46	; 70
 2a8:	84 b9       	out	0x04, r24	; 4
 2aa:	15 b8       	out	0x05, r1	; 5
 2ac:	1f ef       	ldi	r17, 0xFF	; 255
 2ae:	17 b9       	out	0x07, r17	; 7
 2b0:	18 b8       	out	0x08, r1	; 8
 2b2:	1a b9       	out	0x0a, r17	; 10
 2b4:	1b b8       	out	0x0b, r1	; 11
 2b6:	c2 df       	rcall	.-124    	; 0x23c <ADC_init>
 2b8:	80 e8       	ldi	r24, 0x80	; 128
 2ba:	85 bf       	out	0x35, r24	; 53
 2bc:	85 bf       	out	0x35, r24	; 53
 2be:	86 e0       	ldi	r24, 0x06	; 6
 2c0:	e0 e8       	ldi	r30, 0x80	; 128
 2c2:	f2 e0       	ldi	r31, 0x02	; 2
 2c4:	de 01       	movw	r26, r28
 2c6:	11 96       	adiw	r26, 0x01	; 1
 2c8:	01 90       	ld	r0, Z+
 2ca:	0d 92       	st	X+, r0
 2cc:	8a 95       	dec	r24
 2ce:	e1 f7       	brne	.-8      	; 0x2c8 <main+0x32>
 2d0:	10 93 9c 02 	sts	0x029C, r17	; 0x80029c <PollController.1764>
 2d4:	82 e3       	ldi	r24, 0x32	; 50
 2d6:	90 e0       	ldi	r25, 0x00	; 0
 2d8:	a0 e0       	ldi	r26, 0x00	; 0
 2da:	b0 e0       	ldi	r27, 0x00	; 0
 2dc:	80 93 9d 02 	sts	0x029D, r24	; 0x80029d <PollController.1764+0x1>
 2e0:	90 93 9e 02 	sts	0x029E, r25	; 0x80029e <PollController.1764+0x2>
 2e4:	a0 93 9f 02 	sts	0x029F, r26	; 0x80029f <PollController.1764+0x3>
 2e8:	b0 93 a0 02 	sts	0x02A0, r27	; 0x8002a0 <PollController.1764+0x4>
 2ec:	80 93 a1 02 	sts	0x02A1, r24	; 0x8002a1 <PollController.1764+0x5>
 2f0:	90 93 a2 02 	sts	0x02A2, r25	; 0x8002a2 <PollController.1764+0x6>
 2f4:	a0 93 a3 02 	sts	0x02A3, r26	; 0x8002a3 <PollController.1764+0x7>
 2f8:	b0 93 a4 02 	sts	0x02A4, r27	; 0x8002a4 <PollController.1764+0x8>
 2fc:	23 e4       	ldi	r18, 0x43	; 67
 2fe:	31 e0       	ldi	r19, 0x01	; 1
 300:	30 93 a6 02 	sts	0x02A6, r19	; 0x8002a6 <PollController.1764+0xa>
 304:	20 93 a5 02 	sts	0x02A5, r18	; 0x8002a5 <PollController.1764+0x9>
 308:	10 93 91 02 	sts	0x0291, r17	; 0x800291 <MoveObjects.1765>
 30c:	80 93 92 02 	sts	0x0292, r24	; 0x800292 <MoveObjects.1765+0x1>
 310:	90 93 93 02 	sts	0x0293, r25	; 0x800293 <MoveObjects.1765+0x2>
 314:	a0 93 94 02 	sts	0x0294, r26	; 0x800294 <MoveObjects.1765+0x3>
 318:	b0 93 95 02 	sts	0x0295, r27	; 0x800295 <MoveObjects.1765+0x4>
 31c:	80 93 96 02 	sts	0x0296, r24	; 0x800296 <MoveObjects.1765+0x5>
 320:	90 93 97 02 	sts	0x0297, r25	; 0x800297 <MoveObjects.1765+0x6>
 324:	a0 93 98 02 	sts	0x0298, r26	; 0x800298 <MoveObjects.1765+0x7>
 328:	b0 93 99 02 	sts	0x0299, r27	; 0x800299 <MoveObjects.1765+0x8>
 32c:	89 e9       	ldi	r24, 0x99	; 153
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	90 93 9b 02 	sts	0x029B, r25	; 0x80029b <MoveObjects.1765+0xa>
 334:	80 93 9a 02 	sts	0x029A, r24	; 0x80029a <MoveObjects.1765+0x9>
 338:	10 93 86 02 	sts	0x0286, r17	; 0x800286 <__data_end>
 33c:	84 e6       	ldi	r24, 0x64	; 100
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	a0 e0       	ldi	r26, 0x00	; 0
 342:	b0 e0       	ldi	r27, 0x00	; 0
 344:	80 93 87 02 	sts	0x0287, r24	; 0x800287 <__data_end+0x1>
 348:	90 93 88 02 	sts	0x0288, r25	; 0x800288 <__data_end+0x2>
 34c:	a0 93 89 02 	sts	0x0289, r26	; 0x800289 <__data_end+0x3>
 350:	b0 93 8a 02 	sts	0x028A, r27	; 0x80028a <__data_end+0x4>
 354:	80 93 8b 02 	sts	0x028B, r24	; 0x80028b <__data_end+0x5>
 358:	90 93 8c 02 	sts	0x028C, r25	; 0x80028c <__data_end+0x6>
 35c:	a0 93 8d 02 	sts	0x028D, r26	; 0x80028d <__data_end+0x7>
 360:	b0 93 8e 02 	sts	0x028E, r27	; 0x80028e <__data_end+0x8>
 364:	85 ee       	ldi	r24, 0xE5	; 229
 366:	90 e0       	ldi	r25, 0x00	; 0
 368:	90 93 90 02 	sts	0x0290, r25	; 0x800290 <__data_end+0xa>
 36c:	80 93 8f 02 	sts	0x028F, r24	; 0x80028f <__data_end+0x9>
 370:	62 e3       	ldi	r22, 0x32	; 50
 372:	70 e0       	ldi	r23, 0x00	; 0
 374:	80 e0       	ldi	r24, 0x00	; 0
 376:	90 e0       	ldi	r25, 0x00	; 0
 378:	9b d1       	rcall	.+822    	; 0x6b0 <TimerSet>
 37a:	3a d1       	rcall	.+628    	; 0x5f0 <TimerOn>
 37c:	c4 de       	rcall	.-632    	; 0x106 <LCD_init>
 37e:	bb de       	rcall	.-650    	; 0xf6 <LCD_ClearScreen>
 380:	68 e0       	ldi	r22, 0x08	; 8
 382:	80 e0       	ldi	r24, 0x00	; 0
 384:	91 e0       	ldi	r25, 0x01	; 1
 386:	5e d0       	rcall	.+188    	; 0x444 <loadSpriteTable>
 388:	88 ea       	ldi	r24, 0xA8	; 168
 38a:	92 e0       	ldi	r25, 0x02	; 2
 38c:	70 d0       	rcall	.+224    	; 0x46e <initSprites>
 38e:	6e 01       	movw	r12, r28
 390:	87 e0       	ldi	r24, 0x07	; 7
 392:	c8 0e       	add	r12, r24
 394:	d1 1c       	adc	r13, r1
 396:	de 01       	movw	r26, r28
 398:	11 96       	adiw	r26, 0x01	; 1
 39a:	7d 01       	movw	r14, r26
 39c:	f7 01       	movw	r30, r14
 39e:	01 91       	ld	r16, Z+
 3a0:	11 91       	ld	r17, Z+
 3a2:	7f 01       	movw	r14, r30
 3a4:	d8 01       	movw	r26, r16
 3a6:	15 96       	adiw	r26, 0x05	; 5
 3a8:	4d 91       	ld	r20, X+
 3aa:	5d 91       	ld	r21, X+
 3ac:	6d 91       	ld	r22, X+
 3ae:	7c 91       	ld	r23, X
 3b0:	18 97       	sbiw	r26, 0x08	; 8
 3b2:	11 96       	adiw	r26, 0x01	; 1
 3b4:	8d 91       	ld	r24, X+
 3b6:	9d 91       	ld	r25, X+
 3b8:	0d 90       	ld	r0, X+
 3ba:	bc 91       	ld	r27, X
 3bc:	a0 2d       	mov	r26, r0
 3be:	48 17       	cp	r20, r24
 3c0:	59 07       	cpc	r21, r25
 3c2:	6a 07       	cpc	r22, r26
 3c4:	7b 07       	cpc	r23, r27
 3c6:	80 f0       	brcs	.+32     	; 0x3e8 <main+0x152>
 3c8:	f8 01       	movw	r30, r16
 3ca:	80 81       	ld	r24, Z
 3cc:	01 84       	ldd	r0, Z+9	; 0x09
 3ce:	f2 85       	ldd	r31, Z+10	; 0x0a
 3d0:	e0 2d       	mov	r30, r0
 3d2:	08 2e       	mov	r0, r24
 3d4:	00 0c       	add	r0, r0
 3d6:	99 0b       	sbc	r25, r25
 3d8:	09 95       	icall
 3da:	d8 01       	movw	r26, r16
 3dc:	8c 93       	st	X, r24
 3de:	f8 01       	movw	r30, r16
 3e0:	15 82       	std	Z+5, r1	; 0x05
 3e2:	16 82       	std	Z+6, r1	; 0x06
 3e4:	17 82       	std	Z+7, r1	; 0x07
 3e6:	10 86       	std	Z+8, r1	; 0x08
 3e8:	f8 01       	movw	r30, r16
 3ea:	85 81       	ldd	r24, Z+5	; 0x05
 3ec:	96 81       	ldd	r25, Z+6	; 0x06
 3ee:	a7 81       	ldd	r26, Z+7	; 0x07
 3f0:	b0 85       	ldd	r27, Z+8	; 0x08
 3f2:	c2 96       	adiw	r24, 0x32	; 50
 3f4:	a1 1d       	adc	r26, r1
 3f6:	b1 1d       	adc	r27, r1
 3f8:	85 83       	std	Z+5, r24	; 0x05
 3fa:	96 83       	std	Z+6, r25	; 0x06
 3fc:	a7 83       	std	Z+7, r26	; 0x07
 3fe:	b0 87       	std	Z+8, r27	; 0x08
 400:	ec 14       	cp	r14, r12
 402:	fd 04       	cpc	r15, r13
 404:	59 f6       	brne	.-106    	; 0x39c <main+0x106>
 406:	80 91 f9 02 	lds	r24, 0x02F9	; 0x8002f9 <TimerFlag>
 40a:	88 23       	and	r24, r24
 40c:	e1 f3       	breq	.-8      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 40e:	10 92 f9 02 	sts	0x02F9, r1	; 0x8002f9 <TimerFlag>
 412:	c1 cf       	rjmp	.-126    	; 0x396 <main+0x100>

00000414 <loadCustomChar>:
 414:	0f 93       	push	r16
 416:	1f 93       	push	r17
 418:	cf 93       	push	r28
 41a:	df 93       	push	r29
 41c:	8c 01       	movw	r16, r24
 41e:	86 2f       	mov	r24, r22
 420:	88 0f       	add	r24, r24
 422:	88 0f       	add	r24, r24
 424:	88 0f       	add	r24, r24
 426:	80 5c       	subi	r24, 0xC0	; 192
 428:	5e de       	rcall	.-836    	; 0xe6 <LCD_WriteCommand>
 42a:	e8 01       	movw	r28, r16
 42c:	08 5f       	subi	r16, 0xF8	; 248
 42e:	1f 4f       	sbci	r17, 0xFF	; 255
 430:	89 91       	ld	r24, Y+
 432:	77 de       	rcall	.-786    	; 0x122 <LCD_WriteData>
 434:	c0 17       	cp	r28, r16
 436:	d1 07       	cpc	r29, r17
 438:	d9 f7       	brne	.-10     	; 0x430 <loadCustomChar+0x1c>
 43a:	df 91       	pop	r29
 43c:	cf 91       	pop	r28
 43e:	1f 91       	pop	r17
 440:	0f 91       	pop	r16
 442:	08 95       	ret

00000444 <loadSpriteTable>:
 444:	0f 93       	push	r16
 446:	1f 93       	push	r17
 448:	cf 93       	push	r28
 44a:	df 93       	push	r29
 44c:	d6 2f       	mov	r29, r22
 44e:	8c 01       	movw	r16, r24
 450:	c0 e0       	ldi	r28, 0x00	; 0
 452:	cd 17       	cp	r28, r29
 454:	39 f0       	breq	.+14     	; 0x464 <loadSpriteTable+0x20>
 456:	6c 2f       	mov	r22, r28
 458:	c8 01       	movw	r24, r16
 45a:	dc df       	rcall	.-72     	; 0x414 <loadCustomChar>
 45c:	cf 5f       	subi	r28, 0xFF	; 255
 45e:	08 5f       	subi	r16, 0xF8	; 248
 460:	1f 4f       	sbci	r17, 0xFF	; 255
 462:	f7 cf       	rjmp	.-18     	; 0x452 <loadSpriteTable+0xe>
 464:	df 91       	pop	r29
 466:	cf 91       	pop	r28
 468:	1f 91       	pop	r17
 46a:	0f 91       	pop	r16
 46c:	08 95       	ret

0000046e <initSprites>:
 46e:	fc 01       	movw	r30, r24
 470:	23 e0       	ldi	r18, 0x03	; 3
 472:	20 83       	st	Z, r18
 474:	91 e0       	ldi	r25, 0x01	; 1
 476:	91 83       	std	Z+1, r25	; 0x01
 478:	12 82       	std	Z+2, r1	; 0x02
 47a:	85 e0       	ldi	r24, 0x05	; 5
 47c:	83 83       	std	Z+3, r24	; 0x03
 47e:	94 83       	std	Z+4, r25	; 0x04
 480:	16 82       	std	Z+6, r1	; 0x06
 482:	40 e4       	ldi	r20, 0x40	; 64
 484:	52 e0       	ldi	r21, 0x02	; 2
 486:	50 87       	std	Z+8, r21	; 0x08
 488:	47 83       	std	Z+7, r20	; 0x07
 48a:	24 87       	std	Z+12, r18	; 0x0c
 48c:	97 87       	std	Z+15, r25	; 0x0f
 48e:	40 e0       	ldi	r20, 0x00	; 0
 490:	52 e0       	ldi	r21, 0x02	; 2
 492:	51 8b       	std	Z+17, r21	; 0x11
 494:	40 8b       	std	Z+16, r20	; 0x10
 496:	30 e1       	ldi	r19, 0x10	; 16
 498:	31 87       	std	Z+9, r19	; 0x09
 49a:	95 87       	std	Z+13, r25	; 0x0d
 49c:	85 8b       	std	Z+21, r24	; 0x15
 49e:	32 e0       	ldi	r19, 0x02	; 2
 4a0:	30 8f       	std	Z+24, r19	; 0x18
 4a2:	40 ec       	ldi	r20, 0xC0	; 192
 4a4:	51 e0       	ldi	r21, 0x01	; 1
 4a6:	52 8f       	std	Z+26, r21	; 0x1a
 4a8:	41 8f       	std	Z+25, r20	; 0x19
 4aa:	86 8f       	std	Z+30, r24	; 0x1e
 4ac:	21 a3       	std	Z+33, r18	; 0x21
 4ae:	53 a3       	std	Z+35, r21	; 0x23
 4b0:	42 a3       	std	Z+34, r20	; 0x22
 4b2:	2f e0       	ldi	r18, 0x0F	; 15
 4b4:	23 8f       	std	Z+27, r18	; 0x1b
 4b6:	97 8f       	std	Z+31, r25	; 0x1f
 4b8:	87 a3       	std	Z+39, r24	; 0x27
 4ba:	94 e0       	ldi	r25, 0x04	; 4
 4bc:	92 a7       	std	Z+42, r25	; 0x2a
 4be:	20 e8       	ldi	r18, 0x80	; 128
 4c0:	31 e0       	ldi	r19, 0x01	; 1
 4c2:	34 a7       	std	Z+44, r19	; 0x2c
 4c4:	23 a7       	std	Z+43, r18	; 0x2b
 4c6:	96 e0       	ldi	r25, 0x06	; 6
 4c8:	90 ab       	std	Z+48, r25	; 0x30
 4ca:	83 ab       	std	Z+51, r24	; 0x33
 4cc:	20 e4       	ldi	r18, 0x40	; 64
 4ce:	31 e0       	ldi	r19, 0x01	; 1
 4d0:	35 ab       	std	Z+53, r19	; 0x35
 4d2:	24 ab       	std	Z+52, r18	; 0x34
 4d4:	94 af       	std	Z+60, r25	; 0x3c
 4d6:	eb 5b       	subi	r30, 0xBB	; 187
 4d8:	ff 4f       	sbci	r31, 0xFF	; 255
 4da:	87 e0       	ldi	r24, 0x07	; 7
 4dc:	80 83       	st	Z, r24
 4de:	08 95       	ret

000004e0 <moveY>:
 4e0:	cf 93       	push	r28
 4e2:	df 93       	push	r29
 4e4:	ec 01       	movw	r28, r24
 4e6:	8a 81       	ldd	r24, Y+2	; 0x02
 4e8:	6f 3f       	cpi	r22, 0xFF	; 255
 4ea:	3f ef       	ldi	r19, 0xFF	; 255
 4ec:	73 07       	cpc	r23, r19
 4ee:	a1 f0       	breq	.+40     	; 0x518 <moveY+0x38>
 4f0:	61 30       	cpi	r22, 0x01	; 1
 4f2:	71 05       	cpc	r23, r1
 4f4:	11 f5       	brne	.+68     	; 0x53a <moveY+0x5a>
 4f6:	88 23       	and	r24, r24
 4f8:	11 f0       	breq	.+4      	; 0x4fe <moveY+0x1e>
 4fa:	81 50       	subi	r24, 0x01	; 1
 4fc:	11 c0       	rjmp	.+34     	; 0x520 <moveY+0x40>
 4fe:	89 81       	ldd	r24, Y+1	; 0x01
 500:	81 30       	cpi	r24, 0x01	; 1
 502:	d9 f4       	brne	.+54     	; 0x53a <moveY+0x5a>
 504:	8b 81       	ldd	r24, Y+3	; 0x03
 506:	8a 83       	std	Y+2, r24	; 0x02
 508:	88 81       	ld	r24, Y
 50a:	80 5f       	subi	r24, 0xF0	; 240
 50c:	f6 dd       	rcall	.-1044   	; 0xfa <LCD_Cursor>
 50e:	80 e2       	ldi	r24, 0x20	; 32
 510:	08 de       	rcall	.-1008   	; 0x122 <LCD_WriteData>
 512:	89 81       	ldd	r24, Y+1	; 0x01
 514:	81 50       	subi	r24, 0x01	; 1
 516:	10 c0       	rjmp	.+32     	; 0x538 <moveY+0x58>
 518:	9b 81       	ldd	r25, Y+3	; 0x03
 51a:	89 17       	cp	r24, r25
 51c:	18 f4       	brcc	.+6      	; 0x524 <moveY+0x44>
 51e:	8f 5f       	subi	r24, 0xFF	; 255
 520:	8a 83       	std	Y+2, r24	; 0x02
 522:	0b c0       	rjmp	.+22     	; 0x53a <moveY+0x5a>
 524:	89 81       	ldd	r24, Y+1	; 0x01
 526:	81 11       	cpse	r24, r1
 528:	08 c0       	rjmp	.+16     	; 0x53a <moveY+0x5a>
 52a:	1a 82       	std	Y+2, r1	; 0x02
 52c:	88 81       	ld	r24, Y
 52e:	e5 dd       	rcall	.-1078   	; 0xfa <LCD_Cursor>
 530:	80 e2       	ldi	r24, 0x20	; 32
 532:	f7 dd       	rcall	.-1042   	; 0x122 <LCD_WriteData>
 534:	89 81       	ldd	r24, Y+1	; 0x01
 536:	8f 5f       	subi	r24, 0xFF	; 255
 538:	89 83       	std	Y+1, r24	; 0x01
 53a:	2a 81       	ldd	r18, Y+2	; 0x02
 53c:	8f 81       	ldd	r24, Y+7	; 0x07
 53e:	98 85       	ldd	r25, Y+8	; 0x08
 540:	6e 81       	ldd	r22, Y+6	; 0x06
 542:	38 e0       	ldi	r19, 0x08	; 8
 544:	23 9f       	mul	r18, r19
 546:	80 0d       	add	r24, r0
 548:	91 1d       	adc	r25, r1
 54a:	11 24       	eor	r1, r1
 54c:	63 df       	rcall	.-314    	; 0x414 <loadCustomChar>
 54e:	80 e0       	ldi	r24, 0x00	; 0
 550:	df 91       	pop	r29
 552:	cf 91       	pop	r28
 554:	d2 cd       	rjmp	.-1116   	; 0xfa <LCD_Cursor>

00000556 <moveX>:
 556:	cf 93       	push	r28
 558:	df 93       	push	r29
 55a:	ec 01       	movw	r28, r24
 55c:	6f 3f       	cpi	r22, 0xFF	; 255
 55e:	2f ef       	ldi	r18, 0xFF	; 255
 560:	72 07       	cpc	r23, r18
 562:	21 f0       	breq	.+8      	; 0x56c <moveX+0x16>
 564:	61 30       	cpi	r22, 0x01	; 1
 566:	71 05       	cpc	r23, r1
 568:	91 f0       	breq	.+36     	; 0x58e <moveX+0x38>
 56a:	1f c0       	rjmp	.+62     	; 0x5aa <moveX+0x54>
 56c:	99 81       	ldd	r25, Y+1	; 0x01
 56e:	88 81       	ld	r24, Y
 570:	20 e1       	ldi	r18, 0x10	; 16
 572:	92 9f       	mul	r25, r18
 574:	80 0d       	add	r24, r0
 576:	11 24       	eor	r1, r1
 578:	c0 dd       	rcall	.-1152   	; 0xfa <LCD_Cursor>
 57a:	80 e2       	ldi	r24, 0x20	; 32
 57c:	d2 dd       	rcall	.-1116   	; 0x122 <LCD_WriteData>
 57e:	88 81       	ld	r24, Y
 580:	82 30       	cpi	r24, 0x02	; 2
 582:	10 f0       	brcs	.+4      	; 0x588 <moveX+0x32>
 584:	81 50       	subi	r24, 0x01	; 1
 586:	10 c0       	rjmp	.+32     	; 0x5a8 <moveX+0x52>
 588:	18 82       	st	Y, r1
 58a:	1c 82       	std	Y+4, r1	; 0x04
 58c:	0e c0       	rjmp	.+28     	; 0x5aa <moveX+0x54>
 58e:	99 81       	ldd	r25, Y+1	; 0x01
 590:	88 81       	ld	r24, Y
 592:	20 e1       	ldi	r18, 0x10	; 16
 594:	92 9f       	mul	r25, r18
 596:	80 0d       	add	r24, r0
 598:	11 24       	eor	r1, r1
 59a:	af dd       	rcall	.-1186   	; 0xfa <LCD_Cursor>
 59c:	80 e2       	ldi	r24, 0x20	; 32
 59e:	c1 dd       	rcall	.-1150   	; 0x122 <LCD_WriteData>
 5a0:	88 81       	ld	r24, Y
 5a2:	81 31       	cpi	r24, 0x11	; 17
 5a4:	88 f7       	brcc	.-30     	; 0x588 <moveX+0x32>
 5a6:	8f 5f       	subi	r24, 0xFF	; 255
 5a8:	88 83       	st	Y, r24
 5aa:	80 e0       	ldi	r24, 0x00	; 0
 5ac:	df 91       	pop	r29
 5ae:	cf 91       	pop	r28
 5b0:	a4 cd       	rjmp	.-1208   	; 0xfa <LCD_Cursor>

000005b2 <draw>:
 5b2:	0f 93       	push	r16
 5b4:	1f 93       	push	r17
 5b6:	cf 93       	push	r28
 5b8:	df 93       	push	r29
 5ba:	cd b7       	in	r28, 0x3d	; 61
 5bc:	de b7       	in	r29, 0x3e	; 62
 5be:	29 97       	sbiw	r28, 0x09	; 9
 5c0:	0f b6       	in	r0, 0x3f	; 63
 5c2:	f8 94       	cli
 5c4:	de bf       	out	0x3e, r29	; 62
 5c6:	0f be       	out	0x3f, r0	; 63
 5c8:	cd bf       	out	0x3d, r28	; 61
 5ca:	6f 83       	std	Y+7, r22	; 0x07
 5cc:	80 2f       	mov	r24, r16
 5ce:	90 e1       	ldi	r25, 0x10	; 16
 5d0:	19 9f       	mul	r17, r25
 5d2:	80 0d       	add	r24, r0
 5d4:	11 24       	eor	r1, r1
 5d6:	91 dd       	rcall	.-1246   	; 0xfa <LCD_Cursor>
 5d8:	8f 81       	ldd	r24, Y+7	; 0x07
 5da:	29 96       	adiw	r28, 0x09	; 9
 5dc:	0f b6       	in	r0, 0x3f	; 63
 5de:	f8 94       	cli
 5e0:	de bf       	out	0x3e, r29	; 62
 5e2:	0f be       	out	0x3f, r0	; 63
 5e4:	cd bf       	out	0x3d, r28	; 61
 5e6:	df 91       	pop	r29
 5e8:	cf 91       	pop	r28
 5ea:	1f 91       	pop	r17
 5ec:	0f 91       	pop	r16
 5ee:	99 cd       	rjmp	.-1230   	; 0x122 <LCD_WriteData>

000005f0 <TimerOn>:
 5f0:	8b e0       	ldi	r24, 0x0B	; 11
 5f2:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 5f6:	8d e7       	ldi	r24, 0x7D	; 125
 5f8:	90 e0       	ldi	r25, 0x00	; 0
 5fa:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 5fe:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 602:	82 e0       	ldi	r24, 0x02	; 2
 604:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 608:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 60c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 610:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <_avr_timer_M>
 614:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <_avr_timer_M+0x1>
 618:	a0 91 f7 02 	lds	r26, 0x02F7	; 0x8002f7 <_avr_timer_M+0x2>
 61c:	b0 91 f8 02 	lds	r27, 0x02F8	; 0x8002f8 <_avr_timer_M+0x3>
 620:	80 93 f1 02 	sts	0x02F1, r24	; 0x8002f1 <_avr_timer_cntcurr>
 624:	90 93 f2 02 	sts	0x02F2, r25	; 0x8002f2 <_avr_timer_cntcurr+0x1>
 628:	a0 93 f3 02 	sts	0x02F3, r26	; 0x8002f3 <_avr_timer_cntcurr+0x2>
 62c:	b0 93 f4 02 	sts	0x02F4, r27	; 0x8002f4 <_avr_timer_cntcurr+0x3>
 630:	8f b7       	in	r24, 0x3f	; 63
 632:	80 68       	ori	r24, 0x80	; 128
 634:	8f bf       	out	0x3f, r24	; 63
 636:	08 95       	ret

00000638 <__vector_13>:
 638:	1f 92       	push	r1
 63a:	0f 92       	push	r0
 63c:	0f b6       	in	r0, 0x3f	; 63
 63e:	0f 92       	push	r0
 640:	11 24       	eor	r1, r1
 642:	8f 93       	push	r24
 644:	9f 93       	push	r25
 646:	af 93       	push	r26
 648:	bf 93       	push	r27
 64a:	80 91 f1 02 	lds	r24, 0x02F1	; 0x8002f1 <_avr_timer_cntcurr>
 64e:	90 91 f2 02 	lds	r25, 0x02F2	; 0x8002f2 <_avr_timer_cntcurr+0x1>
 652:	a0 91 f3 02 	lds	r26, 0x02F3	; 0x8002f3 <_avr_timer_cntcurr+0x2>
 656:	b0 91 f4 02 	lds	r27, 0x02F4	; 0x8002f4 <_avr_timer_cntcurr+0x3>
 65a:	01 97       	sbiw	r24, 0x01	; 1
 65c:	a1 09       	sbc	r26, r1
 65e:	b1 09       	sbc	r27, r1
 660:	80 93 f1 02 	sts	0x02F1, r24	; 0x8002f1 <_avr_timer_cntcurr>
 664:	90 93 f2 02 	sts	0x02F2, r25	; 0x8002f2 <_avr_timer_cntcurr+0x1>
 668:	a0 93 f3 02 	sts	0x02F3, r26	; 0x8002f3 <_avr_timer_cntcurr+0x2>
 66c:	b0 93 f4 02 	sts	0x02F4, r27	; 0x8002f4 <_avr_timer_cntcurr+0x3>
 670:	89 2b       	or	r24, r25
 672:	8a 2b       	or	r24, r26
 674:	8b 2b       	or	r24, r27
 676:	99 f4       	brne	.+38     	; 0x69e <__vector_13+0x66>
 678:	81 e0       	ldi	r24, 0x01	; 1
 67a:	80 93 f9 02 	sts	0x02F9, r24	; 0x8002f9 <TimerFlag>
 67e:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <_avr_timer_M>
 682:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <_avr_timer_M+0x1>
 686:	a0 91 f7 02 	lds	r26, 0x02F7	; 0x8002f7 <_avr_timer_M+0x2>
 68a:	b0 91 f8 02 	lds	r27, 0x02F8	; 0x8002f8 <_avr_timer_M+0x3>
 68e:	80 93 f1 02 	sts	0x02F1, r24	; 0x8002f1 <_avr_timer_cntcurr>
 692:	90 93 f2 02 	sts	0x02F2, r25	; 0x8002f2 <_avr_timer_cntcurr+0x1>
 696:	a0 93 f3 02 	sts	0x02F3, r26	; 0x8002f3 <_avr_timer_cntcurr+0x2>
 69a:	b0 93 f4 02 	sts	0x02F4, r27	; 0x8002f4 <_avr_timer_cntcurr+0x3>
 69e:	bf 91       	pop	r27
 6a0:	af 91       	pop	r26
 6a2:	9f 91       	pop	r25
 6a4:	8f 91       	pop	r24
 6a6:	0f 90       	pop	r0
 6a8:	0f be       	out	0x3f, r0	; 63
 6aa:	0f 90       	pop	r0
 6ac:	1f 90       	pop	r1
 6ae:	18 95       	reti

000006b0 <TimerSet>:
 6b0:	60 93 f5 02 	sts	0x02F5, r22	; 0x8002f5 <_avr_timer_M>
 6b4:	70 93 f6 02 	sts	0x02F6, r23	; 0x8002f6 <_avr_timer_M+0x1>
 6b8:	80 93 f7 02 	sts	0x02F7, r24	; 0x8002f7 <_avr_timer_M+0x2>
 6bc:	90 93 f8 02 	sts	0x02F8, r25	; 0x8002f8 <_avr_timer_M+0x3>
 6c0:	60 93 f1 02 	sts	0x02F1, r22	; 0x8002f1 <_avr_timer_cntcurr>
 6c4:	70 93 f2 02 	sts	0x02F2, r23	; 0x8002f2 <_avr_timer_cntcurr+0x1>
 6c8:	80 93 f3 02 	sts	0x02F3, r24	; 0x8002f3 <_avr_timer_cntcurr+0x2>
 6cc:	90 93 f4 02 	sts	0x02F4, r25	; 0x8002f4 <_avr_timer_cntcurr+0x3>
 6d0:	08 95       	ret

000006d2 <_exit>:
 6d2:	f8 94       	cli

000006d4 <__stop_program>:
 6d4:	ff cf       	rjmp	.-2      	; 0x6d4 <__stop_program>
